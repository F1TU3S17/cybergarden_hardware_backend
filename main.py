from contextlib import asynccontextmanager
from fastapi import FastAPI

from app.api.v1.devices import router as devices_router
from app.db.session import init_db


@asynccontextmanager
async def lifespan(app: FastAPI):
    """Lifespan events: –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # Startup: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    init_db()
    print("‚úÖ Database initialized (tables created if not exist)")
    yield
    # Shutdown: –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    print("üëã Application shutdown")


app = FastAPI(title="Hack Backend", lifespan=lifespan)
app.include_router(devices_router, prefix="/api/v1")


@app.get("/")
def health_check():
    return {"status": "ok"}

